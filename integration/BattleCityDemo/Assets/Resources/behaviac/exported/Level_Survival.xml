<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: Level_Survival.xml-->
<behavior name="Level_Survival" agenttype="GameLevelCommon" version="5">
  <pars>
    <par name="parT_EnemyCount" type="int" value="0" />
    <par name="parT_AwardType" type="int" value="0" />
    <par name="parT_rotateSpeed" type="float" value="0" />
    <par name="parT_PlayerLifeCount" type="int" value="0" />
    <par name="parT_PlayerID" type="int" value="1" />
    <par name="parT_GameStopped" type="bool" value="false" />
  </pars>
  <node class="Sequence" id="23">
    <node class="Assignment" id="36">
      <property CastRight="false" />
      <property Opl="int Self.GameLevelCommon::parT_PlayerLifeCount" />
      <property Opr="const int 9" />
    </node>
    <node class="Action" id="28">
      <property Method="Self.GameLevelCommon::setActorLifeCount(int Self.GameLevelCommon::parT_PlayerID,int Self.GameLevelCommon::parT_PlayerLifeCount)" />
      <property ResultOption="BT_SUCCESS" />
    </node>
    <node class="DecoratorLoop" id="27">
      <property Count="const int -1" />
      <property DecorateWhenChildEnds="true" />
      <property DoneWithinFrame="false" />
      <node class="Parallel" id="0">
        <property ChildFinishPolicy="CHILDFINISH_LOOP" />
        <property ExitPolicy="EXIT_ABORT_RUNNINGSIBLINGS" />
        <property FailurePolicy="FAIL_ON_ALL" />
        <property SuccessPolicy="SUCCEED_ON_ALL" />
        <node class="Sequence" id="5">
          <node class="Wait" id="6">
            <property Time="const float 1000" />
          </node>
          <node class="Assignment" id="1">
            <property CastRight="false" />
            <property Opl="int Self.GameLevelCommon::parT_AwardType" />
            <property Opr="Self.GameLevelCommon::randomNumberInt(0,4)" />
          </node>
          <node class="Action" id="17">
            <property Method="Self.GameLevelCommon::spawnAward(int Self.GameLevelCommon::parT_AwardType,-1,-1,20)" />
            <property ResultOption="BT_INVALID" />
          </node>
          <node class="Wait" id="2">
            <property Time="const float 10000" />
          </node>
        </node>
        <node class="Sequence" id="3">
          <node class="Assignment" id="9">
            <property CastRight="false" />
            <property Opl="int Self.GameLevelCommon::parT_EnemyCount" />
            <property Opr="Self.GameLevelCommon::getEnemyCount()" />
          </node>
          <node class="Condition" id="11">
            <property Operator="Less" />
            <property Opl="int Self.GameLevelCommon::parT_EnemyCount" />
            <property Opr="const int 10" />
          </node>
          <node class="Action" id="18">
            <property Method="Self.GameLevelCommon::spawnRandomActor(BLUE_FORCE)" />
            <property ResultOption="BT_SUCCESS" />
          </node>
          <node class="Wait" id="10">
            <property Time="const float 3000" />
          </node>
        </node>
        <node class="WaitforSignal" id="13">
          <custom>
            <node class="Condition" id="8">
              <property Operator="Equal" />
              <property Opl="bool Self.GameLevelCommon::isPlayerAlive" />
              <property Opr="const bool false" />
            </node>
          </custom>
          <node class="DecoratorAlwaysSuccess" id="20">
            <property DecorateWhenChildEnds="false" />
            <node class="Sequence" id="25">
              <node class="Wait" id="26">
                <property Time="const float 1000" />
              </node>
              <node class="Assignment" id="24">
                <property CastRight="false" />
                <property Opl="int Self.GameLevelCommon::parT_PlayerLifeCount" />
                <property Opr="Self.GameLevelCommon::getActorLifeCount(int Self.GameLevelCommon::parT_PlayerID)" />
              </node>
              <node class="Condition" id="21">
                <property Operator="Greater" />
                <property Opl="int Self.GameLevelCommon::parT_PlayerLifeCount" />
                <property Opr="const int 0" />
              </node>
              <node class="Action" id="22">
                <property Method="Self.GameLevelCommon::spawnGameActor1(&quot;Tank_Agressive&quot;,{a=1;b=0;g=1;r=0;},int Self.GameLevelCommon::parT_PlayerID)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="Compute" id="38">
                <property Operator="Sub" />
                <property Opl="int Self.GameLevelCommon::parT_PlayerLifeCount" />
                <property Opr1="int Self.GameLevelCommon::parT_PlayerLifeCount" />
                <property Opr2="const int 1" />
              </node>
              <node class="Action" id="39">
                <property Method="Self.GameLevelCommon::setActorLifeCount(int Self.GameLevelCommon::parT_PlayerID,int Self.GameLevelCommon::parT_PlayerLifeCount)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
            </node>
          </node>
        </node>
        <node class="Sequence" id="29">
          <node class="And" id="30">
            <node class="Condition" id="31">
              <property Operator="Equal" />
              <property Opl="int Self.GameLevelCommon::parT_PlayerLifeCount" />
              <property Opr="const int 0" />
            </node>
            <node class="Condition" id="32">
              <property Operator="Equal" />
              <property Opl="bool Self.GameLevelCommon::isPlayerAlive" />
              <property Opr="const bool false" />
            </node>
            <node class="Condition" id="34">
              <property Operator="Equal" />
              <property Opl="bool Self.GameLevelCommon::parT_GameStopped" />
              <property Opr="const bool false" />
            </node>
          </node>
          <node class="Wait" id="37">
            <property Time="const float 2000" />
          </node>
          <node class="Action" id="7">
            <property Method="Self.GameLevelCommon::showCredit()" />
            <property ResultOption="BT_INVALID" />
          </node>
          <node class="Wait" id="4">
            <property Time="const float 6000" />
          </node>
          <node class="Action" id="33">
            <property Method="Self.GameLevelCommon::stopGame(false)" />
            <property ResultOption="BT_SUCCESS" />
          </node>
          <node class="Assignment" id="35">
            <property CastRight="false" />
            <property Opl="bool Self.GameLevelCommon::parT_GameStopped" />
            <property Opr="const bool true" />
          </node>
        </node>
      </node>
    </node>
  </node>
</behavior>